
// Lab2-2.cpp – Листинг программы для Задания №2, 2-ой лабораторной работы
// Вариант 8
//*******************************************************************************
// Имя файла : Lab2-2.cpp
// Резюме : Пример программы написанной на языке программирования С++
// Описание :  
// Программа вычисляет значения функции Y(x) на отрезке [0.05, 1.55] с шагом 0.05
// Выводит на консоль:
// - таблицу значений Y(x) на отрезке [0.05, 1.55];
// - минимальное значение Y(x) в таблице;
// - максимальное значение Y(x) в таблице;
// - среднее арифметическое значений Y(x) в таблице;
// Дата создания : 2022 / 01 / 17
// Автор : Студент НГТУ ИРИТ, Халеев А.А., гр. 21-ИВТз
// Платформа : OS Microsoft Windows, MS Visual Studio 2019 (Community)
// ******************************************************************************

/* Подключение модулей */
#include <stdio.h>
#include <locale.h>
#include <cmath>

/* Инициализация констант, соответствующих количеству строк и столбцов будущего массива */
const int ROW = 31;
const int COL = 2;

/* Объявление прототипов будущих функций*/
void InitYXTable(double[][COL], int); //инициализация таблицы значений Y(x)
void PrintYXTable(double [][COL], int); //печать таблицы значений Y(x)
double YXMin(double[][COL], int); //поиск минимального значения Y(x) в таблице
double YXMax(double[][COL], int); //поиск максимального значения Y(x) в таблице
double YXAverage(double[][COL], int); // вычисление среднего арифметического для значений Y(x)

/* Начало главной функции */
int main() {

	setlocale(LC_ALL, "RUS"); // Вызов функции для отображения русских символов

	/* Логотип программы */
	const  char* logo = "*********************************************************\n\
* Нижегородский государственный технический университет *\n\
* Лабораторная работа №2. Задание 2. Вариант 8.         *\n\
* Выполнил студент группы 21 - ИВТз Халеев Алексей      *\n\
*********************************************************\n";
	printf_s(logo);

	double YXTable[ROW][COL]; // Объявление двумерного массива для хранения значений x и Y(x)
	InitYXTable(YXTable, ROW); // инициализация таблицы значениями x и Y(x)
	PrintYXTable(YXTable, ROW); //печать таблицы значений Y(x)
	printf_s("\nМинимальное значение Y(x) на отрезке [0.05, 1.55]: %lf", YXMin(YXTable, ROW));
	printf_s("\nМаксимальное значение Y(x) на отрезке [0.05, 1.55]: %lf", YXMax(YXTable, ROW));
	printf_s("\nСреднее арифметическое для значений Y(x) на отрезке [0.05, 1.55]:\
 %lf\n", YXAverage(YXTable, ROW));
	system("pause"); // Команда задержки экрана
	return 0; //  Возврат управления ОС в случае успешной работы
} //  END: Конец кода главной функции модуля

void InitYXTable(double Arr[][COL], int rows) {
	// Цель: Инициализация двумерного массива значениями x и Y(x)
	// Исходные данные:
	//		Arr – указатель на инициализируемый двумерный массив
	//		rows - количество строк в массиве
	//		х принимает значения от 0.05 до 1.55 с шагом 0.05
	//		Y(x) вычисляется согласно условия задачи
	// Результат: Массив инициализирован соответствующими значениями x и Y(x)
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная x типа double и инициализируется начальным значением
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i
	* 3) В нулевой столбец записывается текущее значение х
	* 4) В первый столбец записывается результат вычисления значения Y(x)
	* 5) Текущее значение x увеличивается на размер шага согласно условия задачи*/
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double x{ 0.05 }; // инициализация начального значения х
	for (int i = 0; i < rows; i++) {
		Arr[i][0] = x; // запись текущего значения х в соответствующий столбец
		/* запись результата вычисления Y(x) в соответствующий столбец*/
		Arr[i][1] = cbrt(pow(x, 7)) + 3 / x - 4 * pow(x, 6) + 4 / pow(x, 5);
		x += 0.05; // увеличение значения х на величину шага согласно условия задачи
	}
}
void PrintYXTable(double Arr[][COL], int rows) {
	// Цель: Вывод на консоль таблицы значений х и Y(x)
	// Исходные данные:
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Таблица значений х и Y(x) выведена на консоль
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) С помощью форматного вывода printf выводим на консоль обозначения будущих значений,
	* имеющих вид |порядковый номер в таблице|Y(x)| x|
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i
	* 3) С помощью форматного вывода printf выводим на консоль порядковый номер в таблице,
	* значение Y(x) и значение x */
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/

	/*Вывод обозначений*/
	printf("\n|%2c| %15c | %-4c|\n%s\n", '№', 'Y', 'X', "----------------------------");
	for (int i = 0; i < rows; i++) {
		/*Вывод значений*/
		printf("|%2d| %15lf | %.2lf|\n", i + 1, Arr[i][1], Arr[i][0]);
	}
}
double YXMin(double Arr[][COL], int rows) {
	// Цель: Поиск минимального значения Y(x) в таблице
	// Исходные данные:
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Функция возвращает минимальное значение Y(x) в таблице
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная min типа double и инициализируется первым значением Y(x)
	в таблице
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i,
	* которая принимает значения от 1 до rows - 1, т.к. значение нулевой строки уже сохранено
	в переменной min;
	* 3) Для каждой итерации сравнивается значение переменной min и соответствующее строке
	значение Y(x). Если значение Y(x) меньше, оно присваивается переменной min;
	* 4) По завершению цикла функция возвращает значение переменной min типа double,
	* которое и является минимальным значением Y(x) в таблице
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double min = Arr[0][1]; // объявляется переменная min типа double и инициализируется первым
	// значением Y(x) в таблице
	for (int i = 1; i < rows; i++) {
		if (Arr[i][1] < min) min = Arr[i][1]; // обновление переменной min, в случае обнаружения
		// меньшего значения
	}
	return min; // возврат наименьшего значения Y(x) в таблице
}
double YXMax(double Arr[][COL], int rows) {
	// Цель: Поиск максимального значения Y(x) в таблице
	// Исходные данные:
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Функция возвращает максимальное значение Y(x) в таблице
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная max типа double и инициализируется первым значением Y(x)
	в таблице
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i,
	* которая принимает значения от 1 до rows - 1, т.к. значение нулевой строки уже сохранено
	в переменной max;
	* 3) Для каждой итерации сравнивается значение переменной max и соответствующее строке
	значение Y(x). Если значение Y(x) больше, оно присваивается переменной max;
	* 4) По завершению цикла функция возвращает значение переменной max типа double,
	* которое и является максимальным значением Y(x) в таблице
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double max = Arr[0][1]; // объявляется переменная max типа double и инициализируется первым
	// значением Y(x) в таблице
	for (int i = 1; i < rows; i++) {
		if (Arr[i][1] > max) max = Arr[i][1];// обновление переменной max, в случае обнаружения
		// максимального значения
	}
	return max; // возврат наибольшего значения Y(x) в таблице
}
double YXAverage(double Arr[][COL], int rows) {
	// Цель: Вычисление среднего арифметического для значений Y(x) в таблице
	// Исходные данные:
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Функция возвращает среднее арифметическое для значений Y(x) в таблице
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная sum типа double и инициализируется значением 0;
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i;
	* 3) Для каждой итерации значение переменной sum увеличивается на соответствующее строке
	значение Y(x);
	* 4) По завершению цикла вычисляется и возвращается среднее арифметическое для значений 
	Y(x) в таблице, равное отношению суммы элементов к количеству элементов	(количество строк)*/
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double sum = 0; // объявляется переменная sum типа double и инициализируется значением 0
	for (int i = 0; i < rows; i++) {
		sum += Arr[i][1]; //переменная sum увеличивается на соответствующее строке значение Y(x)
	}

	/* вычисление и возврат среднего арифметического для значений Y(x) в таблице */
	return sum / rows;
}
